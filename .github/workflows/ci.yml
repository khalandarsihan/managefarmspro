name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
      - staging

permissions:
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: main-managefarmspro-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306

    env:
      CUSTOM_IMAGE: ghcr.io/${{ github.repository_owner }}/managefarmspro

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Frappe Bench
        run: pip install frappe-bench

      - name: Initialize Bench with Forked Frappe
        run: |
          bench init --skip-redis-config-generation --skip-assets --python "$(which python)" --frappe-path https://github.com/khalandarsihan/frappe.git  --frappe-branch version-15 /home/runner/frappe-bench
        env:
          CI: 'Yes'

      - name: Install Forked Apps (ERPNext, Payments)
        working-directory: /home/runner/frappe-bench
        run: |
          bench get-app erpnext https://github.com/khalandarsihan/erpnext.git --branch version-15
          bench get-app payments https://github.com/khalandarsihan/payments.git --branch version-15
          bench get-app managefarmspro $GITHUB_WORKSPACE

      - name: Setup Frappe Site and Install Apps
        working-directory: /home/runner/frappe-bench
        run: |
          bench new-site --db-root-password root --admin-password admin development.localhost
          bench --site development.localhost install-app erpnext
          bench --site development.localhost install-app payments
          bench --site development.localhost install-app managefarmspro

      - name: Build Assets
        working-directory: /home/runner/frappe-bench
        run: bench build

      - name: Clean Up Docker Volumes
        run: docker volume prune -f

      # Docker Build and Push Steps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.MY_PAT_SECRET }}

      - name: Generate Version Number
        run: |
          version=$(date +"%Y%m%d%H%M%S")
          echo "CUSTOM_TAG=$version" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg FRAPPE_REPO=https://github.com/khalandarsihan/frappe.git \
            --build-arg FRAPPE_BRANCH=version-15 \
            --build-arg ERPNEXT_REPO=https://github.com/khalandarsihan/erpnext.git \
            --build-arg ERPNEXT_BRANCH=version-15 \
            --build-arg PAYMENTS_REPO=https://github.com/khalandarsihan/payments.git \
            --build-arg PAYMENTS_BRANCH=version-15 \
            --build-arg CUSTOM_APP_REPO=$GITHUB_WORKSPACE \
            -t ${{ env.CUSTOM_IMAGE }}:${{ env.CUSTOM_TAG }} \
            -t ${{ env.CUSTOM_IMAGE }}:latest \
            --push .

      - name: Output Image and Tag
        run: |
          echo "Built and pushed Docker image: ${{ env.CUSTOM_IMAGE }}:${{ env.CUSTOM_TAG }}"

  handle_completion:
    runs-on: ubuntu-latest
    needs: [tests]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/staging' }}
    steps:
      - name: Complete CI Run
        run: echo "CI Pipeline Completed Successfully"

