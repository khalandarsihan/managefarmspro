name: CD

on:
  push:
    branches:
      - staging
  workflow_dispatch: # This allows manual triggering from the GitHub UI

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH and update Frappe app
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/frappe_docker
            docker exec -it frappe_docker-backend-1 /bin/bash -c "
              cd apps/managefarmspro/ &&
              git pull origin staging &&
              bench --site frontend migrate &&
              exit
            "
            docker stop frappe_docker-frontend-1 frappe_docker-redis-queue-1 frappe_docker-redis-cache-1 docker-queue-short-1 frappe_docker-db-1 docker-scheduler-1 docker-queue-long-1 frappe_docker-websocket-1 frappe_docker-backend-1
            sleep 60
            docker start frappe_docker-frontend-1 frappe_docker-redis-queue-1 frappe_docker-redis-cache-1 docker-queue-short-1 frappe_docker-db-1 docker-scheduler-1 docker-queue-long-1 frappe_docker-websocket-1 frappe_docker-backend-1
            sleep 60

      - name: Check deployment status
        run: |
          for i in {1..10}; do
            if curl -s -o /dev/null -w "%{http_code}" https://khasihan.xyz | grep 200; then
              echo "Deployment successful!"
              exit 0
            fi
            sleep 10
          done
          echo "Deployment failed"
          exit 1

